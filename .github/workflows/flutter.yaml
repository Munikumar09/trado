name: Flutter CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:  # Renamed the job to reflect both building and testing.
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    # Step 1: Check out the code
    - uses: actions/checkout@v3

    # Step 2: Install Linux system dependencies
    - name: Install Linux system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libglib2.0-dev ninja-build cmake

    # Step 3: Set up Flutter
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
        cache: true  # Cache Flutter dependencies for faster builds.  Highly recommended.

    # Step 4: Get dependencies
    - name: Get dependencies
      run: flutter pub get

    # Step 5: Format and Analyze (with error handling)
    - name: Format Code
      run: ./../dev_tools/code_analysis/frontend/format.sh --check
      continue-on-error: true  # Format check shouldn't block the build; report as a warning.
      id: format_check

    - name: Analyze Code
      run: flutter analyze
      id: analyze  # Add ID for checking exit code later
      continue-on-error: true

    # Step 6:  Run Tests (Unit, Widget, and Integration)
    - name: Run Unit Tests
      run: flutter test --coverage  # Generate coverage report for unit tests.
      id: unit_tests
